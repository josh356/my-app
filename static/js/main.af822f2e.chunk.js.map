{"version":3,"sources":["components/Navbar.js","components/Category.js","components/Menu.js","categoryData.js","components/Item.js","components/ItemList.js","itemListings.js","components/Cart.js","components/SignIn.js","components/Confirmation.js","components/App.js","index.js"],"names":["Navbar","useState","parseInt","localStorage","getItem","cartCount","setCount","user","useEffect","className","to","src","alt","activeClassName","onClick","setItem","window","location","reload","Category","props","name","image","Menu","groupedCategories","categories","ret","i","length","push","key","groupCategories","map","cat","createCategories","Item","addToCart","currentCart","JSON","parse","info","stringify","description","price","cart","filter","toRemove","index","id","removeItem","removeFromCart","ItemList","categoryId","useParams","category","catalogue","forEach","item","type","fillList","inventory","Cart","items","history","useHistory","cartItems","count","numberOfItems","reduce","prevPrice","curPrice","toFixed","SignIn","handleName","password","handlePassword","onSubmit","checkPass","checkName","alert","placeholder","value","onChange","e","target","Confirmation","App","basename","exact","path","itemListings","categoryData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af822f2e.chunk.js","sourcesContent":["import React, {useEffect, useState}from \"react\";\r\nimport {Link, NavLink} from \"react-router-dom\"\r\n//home button\r\n//links to each page\r\n// sign in / log out button\r\n//cart\r\n\r\n\r\nfunction Navbar(){\r\n    const [cartCount, setCount] = useState(parseInt(localStorage.getItem(\"cartCountKey\"),10))\r\n    const user = localStorage.getItem(\"user\")\r\n    useEffect(() => {\r\n        setCount(() => (parseInt(localStorage.getItem(\"cartCountKey\"),10)) || 0)\r\n    }, [])\r\n\r\n    function signOut(){\r\n        localStorage.setItem(\"user\", \"\")\r\n        window.location.reload()\r\n    }\r\n\r\n    function cartLimit(){\r\n        let ret = \"\"\r\n        if(cartCount > 99){\r\n            ret = \"99+\"\r\n        }\r\n        else{\r\n            ret = cartCount\r\n        }\r\n        return ret\r\n    }\r\n    \r\n    return (\r\n        <div className = \"navbar\">\r\n            <div className = \"home\"><Link to = \"/\"><img src = \"assets/images/home.jpg\" alt = \"\"/></Link></div>\r\n            <div className = \"navCenter\">\r\n                <div className = \"page\"><NavLink to = \"/Cats\" activeClassName = \"selected\">Cats</NavLink></div>\r\n                <div className = \"page\"><NavLink to = \"/Toys\" activeClassName = \"selected\">Toys</NavLink></div>\r\n                <div className = \"page\"><NavLink to = \"/Beds\" activeClassName = \"selected\">Beds</NavLink></div>\r\n                <div className = \"page\"><NavLink to = \"/Food\" activeClassName = \"selected\">Food</NavLink></div>\r\n            </div>\r\n            <div className = \"navRight\">\r\n                <div className = \"page\">\r\n                        {localStorage.getItem(\"user\")? \r\n                            <div className = \"signIn\">\r\n                                <p>{`Hi, ${user}`}</p>\r\n                                <button onClick = {() => signOut()}>Sign Out</button>\r\n                            </div>:\r\n                            <div className = \"signIn\">\r\n                                <NavLink to = \"/SignIn\" activeClassName = \"selected\">Sign in </NavLink>\r\n                            </div>\r\n                        }\r\n                </div>\r\n                <div className = \"cart\">\r\n                    <Link to = \"/Cart\">\r\n                        {\r\n                            cartCount === 0 ? null: \r\n                            <span className = \"subCart\">\r\n                                <span className = \"cartCircle\">\r\n                                    <img src = \"assets/images/redcircle.jpg\" alt = \"\"/>\r\n                                </span>\r\n                                <span className = \"cartCount\"> \r\n                                    {cartLimit()}\r\n                                </span>\r\n                            </span>\r\n                            \r\n                        }\r\n                        <img src = \"assets/images/cart.jpg\" alt = \"\"/>\r\n                        \r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Category(props){\r\n    return(\r\n        <div className = \"menuItem\">\r\n            <Link to = {props.name}>\r\n                <img src = {props.image} alt = {\"\"}/>\r\n                <p>{props.name}</p>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Category","import React from \"react\";\r\nimport Category from \"./Category\";\r\nimport \"./App.css\"\r\n\r\n\r\n\r\n\r\n\r\nfunction Menu(props){\r\n    function createCategories(props){\r\n        return(\r\n            props.categories.map((cat) => {\r\n                return(\r\n                    <Category \r\n                        key = {cat.key}\r\n                        image = {cat.image}\r\n                        name = {cat.name}\r\n                    />  \r\n                )\r\n            })\r\n        )\r\n    }\r\n    \r\n    function groupCategories(categories){\r\n        let ret = []\r\n        for(let i = 0; i<categories.length; i++){\r\n            if(i<categories.length-1){\r\n                ret.push(\r\n                    <div className = \"menuRow\" key = {categories[i].key}>\r\n                        {categories[i]}{categories[i+1]}\r\n                    </div>\r\n                )\r\n                i++\r\n            }\r\n            else{\r\n                ret.push(\r\n                    <div className = \"menuRow\" key = {categories[i].key}>\r\n                        {categories[i]}\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        return ret\r\n    }\r\n\r\n    const menuCategories = createCategories(props)\r\n    const groupedCategories = groupCategories(menuCategories)\r\n    return(\r\n        <div>\r\n            {groupedCategories}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu","const categories = [\r\n    {\r\n        key: 1,\r\n        image: \"assets/images/cats.jpg\",\r\n        name: \"Cats\"\r\n    },\r\n    {\r\n        key: 2,\r\n        image: \"assets/images/food.jpg\",\r\n        name: \"Food\"\r\n    },\r\n    {\r\n        key: 3,\r\n        image: \"assets/images/toys.jpg\",\r\n        name:\"Toys\"\r\n    },\r\n    {\r\n        key: 4,\r\n        image: \"assets/images/catbed1.jpg\",\r\n        name:\"Beds\"\r\n    },\r\n    \r\n]\r\n\r\nexport default categories","import React from \"react\"\r\n\r\nfunction Item(props){\r\n    function addToCart(){\r\n        //Update count, if it doesnt exist set to 1\r\n        const cartCount = parseInt(localStorage.getItem(\"cartCountKey\"),10) || 0\r\n        localStorage.setItem(\"cartCountKey\", cartCount+1);\r\n\r\n        //Get the cart\r\n        let currentCart = []\r\n        if(localStorage.getItem(\"cartItemsKey\")){\r\n            currentCart=(JSON.parse(localStorage.getItem(\"cartItemsKey\")))\r\n        }\r\n        //Add to cart and refresh\r\n        currentCart.push(props.info)\r\n        localStorage.setItem(\"cartItemsKey\", JSON.stringify(currentCart))\r\n        window.location.reload()\r\n        \r\n    }\r\n\r\n    function removeFromCart(){\r\n        //Update count\r\n        const cartCount = parseInt(localStorage.getItem(\"cartCountKey\"),10)\r\n        localStorage.setItem(\"cartCountKey\", cartCount-1);\r\n\r\n        //Get the cart\r\n        let currentCart = (JSON.parse(localStorage.getItem(\"cartItemsKey\")))\r\n\r\n        //Remove the item based on the position it was displayed\r\n        currentCart = currentCart.filter((toRemove, index) => {\r\n            return index !== props.id\r\n        })\r\n\r\n       //Update the cart and refresh, dealing with the last item appropiately\r\n    \r\n       if(currentCart.length === 0){\r\n           localStorage.removeItem(\"cartItemsKey\")\r\n       }\r\n       else{\r\n           localStorage.setItem(\"cartItemsKey\", JSON.stringify(currentCart))\r\n       }\r\n       window.location.reload()\r\n    }\r\n\r\n    function generateButton(cart){\r\n        //determines if a remove button is needed (only in the cart page)\r\n        return cart ? \r\n        <div>\r\n            <button onClick = {() => addToCart()}>Add to cart</button>\r\n            <button onClick = {() => removeFromCart()}>Remove from cart</button>\r\n        </div>:\r\n        <button onClick = {() => addToCart()}>Add to cart</button>\r\n\r\n    }\r\n    \r\n\r\n    return(\r\n        <div className = \"item\">\r\n            <div className = \"leftProd\">\r\n                <img src = {props.info.image} alt=\"\"/>\r\n            </div>\r\n\r\n            <div className = \"centerProd\">\r\n                <p>{props.info.description}</p>\r\n            </div>\r\n        \r\n            <div className = \"rightProd\">\r\n                <div className = \"purchaseBtn\">\r\n                    <p>{props.info.price}</p>\r\n                    {generateButton(props.cart)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item\r\n\r\n","import React from \"react\"\r\nimport { useParams } from \"react-router\"\r\nimport Item from \"./Item\"\r\n\r\nfunction ItemList(props){\r\n    function fillList(props,category){\r\n        let ret = []\r\n        props.catalogue.forEach((item, i) => {\r\n            if(item.type === category || props.cart){\r\n\r\n                return(\r\n                    ret.push(<Item key = {i} id = {i} info = {item} cart = {props.cart}/>)\r\n                )\r\n            }\r\n        })\r\n        return(ret)\r\n    }\r\n\r\n    let {categoryId} = useParams()\r\n    return(\r\n        <div className = \"itemListPage\">\r\n            <ul className = \"itemList\">\r\n                {fillList(props,categoryId)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemList \r\n","const inventory = [\r\n    {\r\n        type: \"Beds\",\r\n        name: \"Deluxe cat bed\",\r\n        description: \"Best bed around!\",\r\n        price: 10,\r\n        image: \"assets/images/catbed1.jpg\",\r\n        key: 1,\r\n    },\r\n    {\r\n        type: \"Beds\",\r\n        name: \"Space Ship Bed\",\r\n        description: \"The closest your cat will come to space!\",\r\n        price: 10,\r\n        image: \"assets/images/catbed2.jpg\",\r\n        key: 2,\r\n    },\r\n    {\r\n        type: \"Beds\",\r\n        name: \"Banana Bed\",\r\n        description: \"First came banana boats, now beds!\",\r\n        price: 10,\r\n        image: \"assets/images/catbed3.jpg\",\r\n        key: 3,\r\n    },\r\n    {\r\n        type: \"Food\",\r\n        name: \"Super Cat Growing Food\",\r\n        description: \"Doubles your cats size daily!\",\r\n        price: 27.99,\r\n        image: \"assets/images/food.jpg\",\r\n        key: 4,\r\n    },\r\n    {\r\n        type: \"Food\",\r\n        name: \"Edible Bowl Cat Food\",\r\n        description: \"Includes an edible bowl!\",\r\n        price: 27.99,\r\n        image: \"assets/images/food1.jpg\",\r\n        key: 5,\r\n    },\r\n    {\r\n        type: \"Food\",\r\n        name: \"Bulk food\",\r\n        description: \"Cheap and effective.\",\r\n        price: 27.99,\r\n        image: \"assets/images/food2.jpg\",\r\n        key: 6,\r\n    },\r\n    \r\n]\r\n\r\n\r\nexport default inventory\r\n\r\n\r\n/*\r\n{info: {…}, cart: undefined}\r\ncart: undefined\r\ninfo: {type: 'Beds', name: 'Deluxe cat bed', description: 'Best bed around!', price: 10, image: 'assets/images/stock2.jpg', …}\r\nkey: (...)\r\nget key: ƒ ()\r\n[[Prototype]]: Object\r\nItem.js:7 \r\n{type: 'Beds', name: 'Deluxe cat bed', description: 'Best bed around!', price: 10, image: 'assets/images/stock2.jpg', …}\r\ndescription: \"Best bed around!\"\r\nimage: \"assets/images/stock2.jpg\"\r\nkey: 1\r\nname: \"Deluxe cat bed\"\r\nprice: 10\r\ntype: \"Beds\"\r\n\r\n\r\n{info: {…}, cart: undefined}\r\ncart: undefined\r\ninfo: {type: 'Beds', name: 'Deluxe cat bed', description: 'Best bed around!', price: 10, image: 'assets/images/stock2.jpg', …}\r\nkey: (...)\r\nget key: ƒ ()\r\n\r\n\r\n */","import React from \"react\"\r\nimport { useHistory } from \"react-router\"\r\n//import CartList from \"./CartList\"\r\nimport ItemList from \"./ItemList\"\r\n\r\nfunction Cart(){\r\n    let history = useHistory()\r\n    //makes sure the cart has items before parsing as JSON.parse() does not like empty strings\r\n    const cartItems = localStorage.getItem(\"cartItemsKey\")? JSON.parse(localStorage.getItem(\"cartItemsKey\")) : \"\"\r\n    const count = parseInt(localStorage.getItem(\"cartCountKey\"),10) || 0\r\n\r\n    function calcTotalPrice(items){\r\n        const itemPrices = items.map((item) => (item.price))\r\n        return (itemPrices.reduce((prevPrice, curPrice) => prevPrice+curPrice)).toFixed(2)\r\n    }\r\n    function numberOfItems(){\r\n        let ret = `${count} item`\r\n        return (count ===  1) ?  ret: (ret+\"s\")\r\n    }\r\n\r\n    function handlePurchase(){\r\n        history.push(\"/Confirmation\")\r\n    }\r\n\r\n    return cartItems?\r\n        (<div className = \"filledCart\">\r\n            <ItemList catalogue={cartItems} cart = {true}/>\r\n            <div className = \"cartPurchase\">\r\n                <p>{`Subtotal: ${numberOfItems()}, ${calcTotalPrice(cartItems)}`}</p>\r\n                <button onClick = {() => handlePurchase()}>Complete Purchase</button>\r\n            </div>\r\n\r\n        </div>): \r\n        <div className = \"emptyCart\">\r\n            <p>Your cart is empty!</p>\r\n        </div>\r\n}\r\n\r\nexport default Cart","import React, { useState } from \"react\";\r\n\r\nfunction SignIn(){\r\n    const [name,handleName] = useState(\"\")\r\n    const [password,handlePassword] = useState(\"\")\r\n\r\n\r\n    function checkUser(checkName, checkPass){\r\n        //this would check a list of users to find if the user has an account\r\n        //for now it just checks for an example user\r\n        if(checkName === \"Smith\" && checkPass === \"admin\"){\r\n            localStorage.setItem(\"user\", checkName)\r\n            alert(`Signed in! Welcome ${checkName}!`)\r\n        }\r\n        else{\r\n            alert(\"No user found or incorrect password entered.\")\r\n        }\r\n    }\r\n\r\n    return(\r\n        !localStorage.getItem(\"user\")?\r\n            <div className = \"centerBox\">\r\n                <form onSubmit = {() => checkUser(name,password)}>\r\n                    <label>Name:\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"name\" \r\n                            placeholder =\"Name\" \r\n                            value = {name} \r\n                            onChange = {(e) => handleName(e.target.value)}\r\n                            />\r\n                    </label>\r\n                    \r\n                    <label>Password:\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"password\" \r\n                            placeholder = \"Password\" \r\n                            value = {password} \r\n                            onChange = {(e) => handlePassword(e.target.value)}\r\n                        />\r\n                    </label>\r\n                    \r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form>\r\n                <p>Please enter your username and password.</p>\r\n            </div>:\r\n            <div className = \"centerBox\">\r\n                <p>Signed in</p>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default SignIn","import React from \"react\";\r\n\r\nfunction Confirmation(){\r\n    return(\r\n        <div className = \"confirm\">\r\n            <p>Your items will arrive in approximately 3 to 9 buisness months, depending on how fast the cats are.</p>\r\n            <p>Money back guarentee!</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Confirmation","//@ts-check\r\n\r\n\r\n\r\nimport './App.css';\r\n\r\nimport Navbar from './Navbar';\r\nimport React from 'react';\r\nimport Menu from './Menu';\r\nimport categoryData from \"../categoryData\"\r\nimport ItemList from './ItemList';\r\nimport itemListings from \"../itemListings\"\r\nimport Cart from \"./Cart\"\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  //Link\r\n} from \"react-router-dom\";\r\nimport SignIn from './SignIn';\r\nimport Confirmation from './Confirmation';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router basename = \"/my-app\">\r\n      <Navbar />\r\n      <button onClick = {() => \r\n        {\r\n          localStorage.setItem(\"cartCountKey\", \"\")\r\n          localStorage.setItem(\"cartItemsKey\", \"\")\r\n          localStorage.setItem(\"user\", \"\")\r\n          window.location.reload()\r\n        }}>\r\n        Temp Clear\r\n      </button>\r\n      <Switch>\r\n        <Route exact path=\"/Cart\">\r\n          <Cart />\r\n        </Route>\r\n        <Route exact path=\"/Confirmation\">\r\n          <Confirmation />\r\n        </Route>\r\n        <Route exact path=\"/SignIn\">\r\n          <SignIn />\r\n        </Route>\r\n        <Route exact path=\"/:categoryId\">\r\n          <ItemList catalogue={itemListings} />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <div className=\"home\">\r\n            <Menu categories = {categoryData}/>\r\n          </div>\r\n        </Route>\r\n\r\n      </Switch>\r\n    </Router>\r\n    \r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}